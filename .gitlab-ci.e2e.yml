stages:
  - .pre
  - build
  - test:ssr
  - test:screenshot:chrome
  - test:screenshot:firefox
  - test:screenshot:safari
  - test:screenshot:opera
  - test:screenshot:edge
  - .post

cache: &global-cache
  key:
    files:
      - yarn.lock
  paths:
    - node_modules
  policy: pull

install-dependencies:
  image: ${BUILDER_IMAGE_WITH_CACHE}
  stage: .pre
  tags:
    - no-internet
  cache:
    <<: *global-cache
    policy: pull-push
  script:
    - yarn ci-build-from-source
  tags:
    - build

build:
  image: ${BUILDER_IMAGE_WITH_CACHE}
  stage: build
  needs:
    - install-dependencies
  script:
    - yarn e2e:build
  artifacts:
    paths:
      - dist/e2e/

.test:base: &test-base
  image: gitlab-registry.ozon.ru/docker/nodejs-wdio:latest
  tags:
    - moon
    - 5m
  needs:
    - build
  script:
    - yarn e2e:test

.test:ssr: &test-ssr
  <<: *test-base
  stage: test:ssr

test:ssr:chrome:
  <<: *test-ssr
  variables:
    E2E_SUITE: ssr
    E2E_BROWSER_SERVICE: moon
    E2E_BROWSER_NAME: chrome

test:ssr:edge:
  <<: *test-ssr
  variables:
    E2E_SUITE: ssr
    E2E_BROWSER_SERVICE: moon
    E2E_BROWSER_NAME: microsoftedge

test:ssr:firefox:
  <<: *test-ssr
  variables:
    E2E_SUITE: ssr
    E2E_BROWSER_SERVICE: moon
    E2E_BROWSER_NAME: firefox

test:ssr:opera:
  <<: *test-ssr
  variables:
    E2E_SUITE: ssr
    E2E_BROWSER_SERVICE: moon
    E2E_BROWSER_NAME: opera

test:ssr:safari:
  <<: *test-ssr
  variables:
    E2E_SUITE: ssr
    E2E_BROWSER_SERVICE: moon
    E2E_BROWSER_NAME: safari

.test:screenshot: &test-screenshot
  <<: *test-base
  artifacts:
    when: always
    paths:
      - dist/wdio/screenshots.zip
      - dist/wdio/reports.zip

push-compare-app:
  stage: .post
  image: ${BUILDER_IMAGE_WITH_CACHE}
  when: on_failure
  allow_failure: true
  dependencies:
    - install-dependencies
  script:
    - npx e2e-runner screenshots compare-app

push-screenshots:
  stage: .post
  image: ${BUILDER_IMAGE_WITH_CACHE}
  needs:
    - install-dependencies
  when: manual
  script:
    - npx e2e-runner screenshots push

# Screenshot jobs will be generated automatically by running e2e:generate-child-pipeline-config
